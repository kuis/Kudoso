.task_wrap
  .task_name
    = task.name
  .task_description
    = task.description
  .task_schedule
    Default Schedule:
    = IceCube::Rule.from_yaml(task.schedule)
  .task_attributes
    %ul.small-block-grid-3
      %li
        Acitve:
        = task.active?
      %li
        Required:
        = task.required?
      %li
        Kudos:
        = task.kudos
  .task_assignments
    Assigned to:
    %ul
      - task.members.each do |member|
        %li=member.full_name
  - # TODO: Only allow assign if there are kids with this task already
  .task_assign
    - if can?(:create, TaskSchedule)

      %a.btn.btn-primary{href: "#assign_task_#{task.id}", data: {toggle: "collapse" }, aria: { expanded: "false", controls: "assign_task_#{task.id}"} }
        Assign to child
      .row
        .col-xs-6.col-xs-offset-2
          .content.collapse{id: "assign_task_#{task.id}"}
            = simple_form_for [@family, task, ts = TaskSchedule.new], html: { class: 'uk-form' }, wrapper: :uikit_form do |f|
              .form_group
                = f.label 'Choose a family member:'
                = f.collection_select :member_id, @family.kids, :id, :full_name
              = f.input :start_date, as: :datepicker
              =f.input :end_date, as: :datepicker
              .row
                .col-xs-9.col-xs-offset-3
                  = f.label :schedule
                  = f.fields_for :schedule_rrules, ts.schedule_rrules.build(rrule: task.schedule) do |builder|
                    = render 'schedule_rrules/schedule_rrule_fields', f: builder
                .links
                  =# link_to_add_association 'Add new recurring schedule', f, :schedule_rrules,  partial: 'schedule_rrules/schedule_rrule_fields'
              = f.button :submit, class: 'btn btn-success'
  %hr
  .task_actions
    = link_to 'Edit', edit_family_task_path(task.family, task), class: "btn btn-default" if can?(:update, task)
    = link_to 'Destroy', family_task_path(task.family, task), :method => :delete, :data => { :confirm => 'Are you sure?' }, class: "btn btn-danger" if can?(:delete, task)